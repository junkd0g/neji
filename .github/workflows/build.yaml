name: Go CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go (Latest Stable Version)
        uses: actions/setup-go@v4
        with:
          go-version: stable  # Ensures Go 1.23 or the latest version is always used

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests with Coverage
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out | awk '/total:/ {if ($3 < 100.0) exit 1}'

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go (Latest Stable Version)
        uses: actions/setup-go@v4
        with:
          go-version: stable  # Latest Go version

      - name: Run Go Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go (Latest Stable Version)
        uses: actions/setup-go@v4
        with:
          go-version: stable  # Ensures the latest Go version

      - name: Run govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: 'stable'  # Ensures it runs with the latest Go version
          go-package: './...'